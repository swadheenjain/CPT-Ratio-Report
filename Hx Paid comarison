SET job.priority 'NORMAL';
SET pig.encrypt.keyResolver 'org.apache.pig.crypto.shims.MappingKeyResolver';
SET pig.encrypt.key.mapping.file 'file:////opt/key/all/allkeymappingload.xml';
SET pig.ignoreBadFiles.force true;

Clms = LOAD '/refined/subsets/t1/not_restricted/{TFTMA,TMHMA}/2014/' USING PigStorage('\\u1') AS
(tp_payer_key: int
,tp_tx_key: chararray
,ts_tx_stream_key: chararray
,ts_tx_seq: chararray
,ts_tx_type_code: chararray
,ts_product_type: chararray
,ts_received_date: chararray
,c_claim_id: chararray
,l_line_seq: chararray
,m_sub_id: chararray
,member_key: chararray
,dep_id: chararray
,c_dob: chararray
,c_gender_id: chararray
,member_dob_not_used: chararray
,member_gender_not_used: chararray
,cub_bill_type: chararray
,cond_code_1: chararray
,cond_code_2: chararray
,cond_code_3: chararray
,cond_code_4: chararray
,cond_code_5: chararray
,cond_code_6: chararray
,cond_code_7: chararray
,cond_code_8: chararray
,cond_code_9: chararray
,cond_code_10: chararray
,cond_code_11: chararray
,cond_code_12: chararray
,cond_code_13: chararray
,cond_code_14: chararray
,cond_code_15: chararray
,cond_code_16: chararray
,cond_code_17: chararray
,cond_code_18: chararray
,cond_code_19: chararray
,cond_code_20: chararray
,cond_code_21: chararray
,cond_code_22: chararray
,cond_code_23: chararray
,cond_code_24: chararray
,claim_diag_1: chararray
,claim_diag_2: chararray
,claim_diag_3: chararray
,claim_diag_4: chararray
,claim_diag_5: chararray
,claim_diag_6: chararray
,claim_diag_7: chararray
,claim_diag_8: chararray
,claim_diag_9: chararray
,claim_diag_10: chararray
,claim_diag_11: chararray
,claim_diag_12: chararray
,claim_diag_13: chararray
,claim_diag_14: chararray
,claim_diag_15: chararray
,claim_diag_16: chararray
,claim_diag_17: chararray
,claim_diag_18: chararray
,claim_diag_19: chararray
,claim_diag_20: chararray
,claim_diag_21: chararray
,claim_diag_22: chararray
,claim_diag_23: chararray
,claim_diag_24: chararray
,claim_diag_25: chararray
,admit_diag: chararray
,line_diag_1: chararray
,line_diag_2: chararray
,line_diag_3: chararray
,line_diag_4: chararray
,p_provider_id: chararray
,provider_key: chararray
,subspec_id: chararray
,t_taxgroup_id: chararray
,taxgroup_key: chararray
,l_dos_from: chararray
,l_dos_to: chararray
,pos_id: chararray
,l_insurance_key: chararray
,l_insurance_id: chararray
,sub_rev_code: chararray
,sub_cpt: chararray
,sub_mod1: chararray
,sub_mod2: chararray
,sub_mod3: chararray
,sub_mod4: chararray
,l_sub_units: double
,l_sub_amount: double
,rev_code: chararray
,cpt: chararray
,mod1: chararray
,mod2: chararray
,mod3: chararray
,mod4: chararray
,l_units: double
,l_amount: double
,l_copay: double
,l_coinsurance: double
,l_deductible: double
,l_cob: double
,l_other_reduction: double
,l_paid: double
,l_paid_date: chararray
,l_bypass_code: chararray
,l_claim_type: chararray
,l_par_yn: chararray
,l_line_key: long
,c_claim_key: long
,c_claim_master_key: long
,subspec_code: chararray
,ssl_spec_code: chararray
,pos: chararray
,rr_rec_cpt: chararray
,rr_rec_mod1: chararray
,rr_rec_mod2: chararray
,rr_rec_mod3: chararray
,rr_rec_mod4: chararray
,rr_rec_units: double
,rr_rec_pct: double
,c_claim_id_orig: chararray
,l_line_seq_orig: chararray
,c_cdf_text_1: chararray
,c_cdf_text_2: chararray
,c_cdf_text_3: chararray
,l_cdf_text_1: chararray
,l_cdf_text_2: chararray
,l_cdf_text_3: chararray
,l_provider_zip: chararray
,l_provider_plus_4: chararray
,l_tos: chararray
,rt_rec_tx_line_key: chararray
,tp_payer_short: chararray
,cub_drg: chararray
,ts_stream_key: chararray
,c_group_id: chararray
,c_partner_id: chararray
,cub_dos_from: chararray
,cub_dos_to: chararray
,cub_admit_date: chararray
,cub_admit_hour: chararray
,cub_admit_minute: chararray
,cub_admit_type: chararray
,cub_discharge_date: chararray
,cub_discharge_hour: chararray
,cub_discharge_minute: chararray
,cub_discharge_status: chararray
,cub_sub_drg: chararray
,cub_sub_severity: chararray
,cub_severity: chararray
,cub_sub_noncovered_amount: double
,cub_claim_billed_amount: double
,cub_claim_noncovered_amount: double
,cub_claim_allowed_amount: double
,cub_claim_paid_amount: double
,cub_assignment_of_benefits: chararray
,cub_prior_payments: double
,cub_npi_attending: chararray
,cub_date_adjudicated: chararray
,cub_date_received_client: chararray
,cub_claim_type: chararray
,cub_par_yn: chararray
,cub_npi: chararray
,cub_paid_date: chararray
,cub_product_state: chararray
,cub_grouper_id: chararray
,cub_grouper_key: chararray
,cub_claim_denial_rsn_cd: chararray
,cub_alc_days: int
,cub_birth_weight: double
,claim_diag_poa_1: chararray
,claim_diag_poa_2: chararray
,claim_diag_poa_3: chararray
,claim_diag_poa_4: chararray
,claim_diag_poa_5: chararray
,claim_diag_poa_6: chararray
,claim_diag_poa_7: chararray
,claim_diag_poa_8: chararray
,claim_diag_poa_9: chararray
,claim_diag_poa_10: chararray
,claim_diag_poa_11: chararray
,claim_diag_poa_12: chararray
,claim_diag_poa_13: chararray
,claim_diag_poa_14: chararray
,claim_diag_poa_15: chararray
,claim_diag_poa_16: chararray
,claim_diag_poa_17: chararray
,claim_diag_poa_18: chararray
,claim_diag_poa_19: chararray
,claim_diag_poa_20: chararray
,claim_diag_poa_21: chararray
,claim_diag_poa_22: chararray
,claim_diag_poa_23: chararray
,claim_diag_poa_24: chararray
,claim_diag_poa_25: chararray
,admit_diag_poa: chararray
,ecode_diag_1: chararray
,ecode_poa_1: chararray
,ecode_diag_2: chararray
,ecode_poa_2: chararray
,ecode_diag_3: chararray
,ecode_poa_3: chararray
,rfv_diag_1: chararray
,rfv_poa_1: chararray
,value_code_1: chararray
,value_amount_1: double
,value_code_2: chararray
,value_amount_2: double
,value_code_3: chararray
,value_amount_3: double
,value_code_4: chararray
,value_amount_4: double
,value_code_5: chararray
,value_amount_5: double
,icd_proc_1: chararray
,icd_proc_date_1: chararray
,icd_proc_2: chararray
,icd_proc_date_2: chararray
,icd_proc_3: chararray
,icd_proc_date_3: chararray
,icd_proc_4: chararray
,icd_proc_date_4: chararray
,icd_proc_5: chararray
,icd_proc_date_5: chararray
,icd_proc_6: chararray
,icd_proc_date_6: chararray
,icd_proc_7: chararray
,icd_proc_date_7: chararray
,icd_proc_8: chararray
,icd_proc_date_8: chararray
,icd_proc_9: chararray
,icd_proc_date_9: chararray
,icd_proc_10: chararray
,icd_proc_date_10: chararray
,icd_proc_11: chararray
,icd_proc_date_11: chararray
,icd_proc_12: chararray
,icd_proc_date_12: chararray
,l_void_yn: chararray
,l_npi: chararray
,l_edit_0_allowed_yn: chararray
,l_zero_chg_line_seq: chararray
,l_zero_chg_sched_amount: double
,l_contract_id: chararray
,l_ndc: chararray
,l_er_visit_yn: chararray
,rr_reason1_code: chararray
,rr_reason1_id: chararray
,rr_claim1_id: chararray
,rr_line1_seq: chararray
,rr_rec1_pct: double
,rr_rec1_units: double
,rr_sub_rule1_key: int
,rr_dp1_key: int
,rr_reason2_code: chararray
,rr_reason2_id: chararray
,rr_claim2_id: chararray
,rr_line2_seq: chararray
,rr_rec2_pct: double
,rr_rec2_units: double
,rr_sub_rule2_key: int
,rr_dp2_key: int
,rr_reason3_code: chararray
,rr_reason3_id: chararray
,rr_claim3_id: chararray
,rr_line3_seq: chararray
,rr_rec3_pct: double
,rr_rec3_units: double
,rr_sub_rule3_key: int
,rr_dp3_key: int
,rr_bundling_rec_yn: chararray
,sub_rule_key_last: int
,date: chararray
,iht_saving: double
);


EM1  =  Filter Clms by ts_received_date MATCHES '2014-0[7-9].*';

EM_A = FOREACH EM1 GENERATE  
		  tp_payer_short
		, cpt
		, p_provider_id
		, ssl_spec_code
		, l_paid
		,l_claim_type
		,l_line_key
		,member_key;

CPT_MASTER = LOAD '/refined/mdm/cpt_master' USING PigStorage('\\u1') AS 
			(cpt_code: chararray, short_desc: chararray, med_desc: chararray, long_desc: chararray, cpt_origin_code: chararray);

CPT_Ratio = JOIN EM_A by cpt, CPT_MASTER by cpt_code using 'replicated';

CPT_Ratio1 = FOREACH CPT_Ratio Generate EM_A::tp_payer_short as payer,EM_A::member_key as patient,EM_A::cpt as cpt,EM_A::l_claim_type as l_claim_type,EM_A::p_provider_id as provider
	      , EM_A::ssl_spec_code as spec,EM_A::l_line_key as line_key,EM_A::l_paid as paid,CPT_MASTER::short_desc as cpt_desc;

CPT_Ratio2 = GROUP CPT_Ratio1 by (payer,cpt,cpt_desc,provider,spec,l_claim_type);

CPT_Ratio3 = FOREACH CPT_Ratio2
{
  a = FOREACH CPT_Ratio1 GENERATE patient;
  b = DISTINCT a;
 Generate FLATTEN(group) as(payer,cpt,cpt_desc,provider,spec,l_claim_type), SUM(CPT_Ratio1.paid) as paid_sum
		, COUNT(b.patient) as patient_count, COUNT(CPT_Ratio1.line_key) as count_claimID;
};
CPT_Ratio4 = GROUP CPT_Ratio3 by (payer,cpt,cpt_desc,provider,spec,l_claim_type,patient_count,count_claimID);

CPT_Ratio5 = FOREACH CPT_Ratio4 Generate FLATTEN(group) as(payer,cpt,cpt_desc,provider,spec,l_claim_type,patient_count,count_claimID),(int)MAX(CPT_Ratio3.paid_sum) as paid_sumMAX;

CPT_Ratio_Rank = rank CPT_Ratio5 by cpt DESC, paid_sumMAX DESC,payer DESC,provider DESC,spec DESC DENSE;
CPT_Ratio_SORT = Foreach CPT_Ratio_Rank GENERATE rank_CPT_Ratio5 as rank_CPT_Ratio5
							,payer as payer
							,cpt as cpt
							,cpt_desc as cpt_desc
							,provider as provider
							,spec as spec
							,paid_sumMAX as paid_sumMAX
							,l_claim_type as l_claim_type
							,patient_count as patient_count
							,count_claimID as count_claimID;



CPT_Ratio_SORT1 = GROUP CPT_Ratio_SORT by (payer,cpt,l_claim_type);
CPT_Ratio_SORT2 = FOREACH CPT_Ratio_SORT1 Generate FLATTEN(group) as (payer,cpt,l_claim_type), MIN(CPT_Ratio_SORT.rank_CPT_Ratio5) as RecID_min
			, COUNT(CPT_Ratio_SORT.provider) as provider_count;
		

--, SUM(CPT_Ratio_SORT.patient_count) as total_patient,SUM(CPT_Ratio_SORT.count_claimID) as total_claimID;


CPT_Ratio_SORT3 = JOIN CPT_Ratio_SORT by (payer,cpt,l_claim_type), CPT_Ratio_SORT2 by (payer,cpt,l_claim_type) using 'replicated';

CPT_Ratio_SORT4 = FOREACH CPT_Ratio_SORT3 generate CPT_Ratio_SORT::rank_CPT_Ratio5 as RecID,CPT_Ratio_SORT::payer as payer,CPT_Ratio_SORT::cpt as cpt
			 ,CPT_Ratio_SORT::l_claim_type as l_claim_type,CPT_Ratio_SORT::cpt_desc as cpt_desc,CPT_Ratio_SORT::provider as provider
			 ,CPT_Ratio_SORT::spec as spec,CPT_Ratio_SORT::paid_sumMAX as paid_sumMAX,CPT_Ratio_SORT::patient_count as patient_count
			 ,CPT_Ratio_SORT::count_claimID as count_claimID,CPT_Ratio_SORT2::provider_count as provider_count
			 ,CPT_Ratio_SORT2::RecID_min as RecID_min,(int)((CPT_Ratio_SORT::rank_CPT_Ratio5 - CPT_Ratio_SORT2::RecID_min)+1) as Index;






CPT_Ratio_SORT5 = FILTER CPT_Ratio_SORT4 by  Index<= 2;

Expand1 = FILTER CPT_Ratio_SORT5 by  Index == 1;
Expand2 = FOREACH Expand1 Generate payer, cpt,l_claim_type, paid_sumMAX;
	
Expand3 = FILTER CPT_Ratio_SORT5 by  Index == 2;
Expand4 = FOREACH Expand3 Generate payer, cpt,l_claim_type, paid_sumMAX;
Expand5 = JOIN Expand2 by (payer,cpt,l_claim_type) ,Expand4 by (payer,cpt,l_claim_type);

Expand6 = FOREACH Expand5 Generate Expand2::payer as payer,Expand2::cpt as cpt,Expand2::l_claim_type as l_claim_type,Expand2::paid_sumMAX as Index1,Expand4::paid_sumMAX as Index2
		,(double)(Expand2::paid_sumMAX/Expand4::paid_sumMAX) as Ratio;

Expand7 = FILTER Expand6 by Index1 > 10000 AND Ratio > 5;

FinalReport = JOIN CPT_Ratio_SORT5 by (payer,cpt,l_claim_type), Expand7 by (payer,cpt,l_claim_type) using 'replicated';

ReportFinal = Foreach FinalReport generate CPT_Ratio_SORT5::payer
				, CPT_Ratio_SORT5::cpt
				, CPT_Ratio_SORT5::cpt_desc
				, CPT_Ratio_SORT5::provider
				, CPT_Ratio_SORT5::provider_count
				, CPT_Ratio_SORT5::patient_count
				, CPT_Ratio_SORT5::spec
				, CPT_Ratio_SORT5::paid_sumMAX
				, CPT_Ratio_SORT5::l_claim_type
				, CPT_Ratio_SORT5::count_claimID
				, CPT_Ratio_SORT5::Index
				, Expand7::Ratio;


rmf /user/sjain/Tufts_CPTRatio
STORE ReportFinal into '/user/sjain/Tufts_CPTRatio' using PigStorage ('|','-schema');

-- hadoop fs -getmerge /user/sjain/Tufts_CPTRatio  Tufts_CPTRatio.csv

